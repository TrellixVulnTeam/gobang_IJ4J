{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_test_child = _resolveComponent(\"test_child\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h5\", null, \"用户名:\" + _toDisplayString($data.username), 1\n  /* TEXT */\n  ), _createVNode(_component_a_input, {\n    size: \"large\",\n    value: $setup.child,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.child = $event),\n    placeholder: \"请输入房间号\"\n  }, null, 8\n  /* PROPS */\n  , [\"value\"]), _createVNode(_component_test_child, {\n    child: $setup.child\n  }, null, 8\n  /* PROPS */\n  , [\"child\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACAA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,SAAIC,iBAAEC,cAAF,CAAR,EAAkB;EAAA;EAAlB,GACEC,aAA6EC,kBAA7E,EAA6E;IAApEC,IAAI,EAAC,OAA+D;IAA/CC,KAAK,EAAEC,YAAwC;0DAAxCA,eAAKC,OAAmC;IAAjCC,WAAW,EAAC;EAAqB,CAA7E;;EAAA,cACAN,aAAwCO,qBAAxC,EAAwC;IAA3BC,KAAK,EAAEJ;EAAoB,CAAxC,EAAyB,IAAzB,EAAyB;EAAA;EAAzB,EAAyB,SAAzB","names":["_createElementVNode","_toDisplayString","$data","_createVNode","_component_a_input","size","value","$setup","$event","placeholder","_component_test_child","child"],"sourceRoot":"","sources":["C:\\gobang\\gobang\\view\\src\\components\\Person.vue"],"sourcesContent":["<template>\r\n<h5>用户名:{{username}}</h5>\r\n  <a-input size=\"large\" v-model:value=\"child\" placeholder=\"请输入房间号\"  ></a-input>\r\n  <test_child :child=\"child\"></test_child>\r\n</template>\r\n\r\n<script>\r\nimport global from \"@/js/global\";\r\nimport {ref} from \"vue\";\r\nimport Test_child from \"@/components/test_child\";\r\nexport default {\r\n  name: \"Person\",\r\n  components: {Test_child},\r\n  setup(){\r\n    let child=ref(\" \");\r\n    child.value=''\r\n\r\n    return{\r\n      child,\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      username:global.username\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}